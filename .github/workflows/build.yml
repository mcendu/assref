name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  build_linux:
    name: Ubuntu
    strategy:
      matrix:
        buildtype: ["debug", "release"]
    runs-on: ubuntu-latest
    env:
      packagename: assref-ubuntu-git_${{ github.sha }}-${{ matrix.buildtype }}
      prefix: ${{ github.workspace }}/builddir/assref-ubuntu-git_${{ github.sha }}-${{ matrix.buildtype }}

    steps:
    - uses: actions/checkout@v3

    - name: Install Meson and dependencies
      run: |
        sudo apt-get update
        sudo apt-get install \
          meson \
          libgtest-dev \
          hexchat-dev \
          libsqlite3-dev \

    - name: Configure project
      run: |
        meson setup \
          --backend ninja \
          --buildtype ${{ matrix.buildtype }} \
          --prefix=${{ env.prefix }} \
          builddir

    - name: Build
      run: |
        ninja -C builddir
        ninja -C builddir install

    - name: Test
      run: |
        meson test -C builddir

    - name: Package
      if: github.event_name == 'push'
      working-directory: ./builddir
      run: |
        tar -cJf ${{ env.packagename }}.tar.xz ${{ env.packagename }}

    - name: Upload artifacts
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.packagename }}.tar.xz
        path: builddir/${{ env.packagename }}.tar.xz

  build-windows:
    name: Windows x64
    strategy:
      matrix:
        buildtype: ["debug", "release"]
    runs-on: windows-latest
    env:
      packagename: assref-win64-git_${{ github.sha }}-${{ matrix.buildtype }}
      prefix: ${{ github.workspace }}/builddir/assref-win64-git_${{ github.sha }}-${{ matrix.buildtype }}
    defaults:
      run:
        shell: msys2 {0}

    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        install: |-
          zip
        pacboy: |-
          gcc:p
          pkgconf:p
          meson:p
          gtest:p
          hexchat:p
          sqlite3:p
    - uses: actions/checkout@v3

    - name: Configure project
      run: |
        meson setup \
          --backend ninja \
          --buildtype ${{ matrix.buildtype }} \
          --prefix="${{ env.prefix }}" \
          -Dwith_static_sqlite=true \
          builddir

    - name: Build
      run: |
        ninja -C builddir
        ninja -C builddir install

    - name: Test
      run: |
        meson test -C builddir

    - name: Package
      if: github.event_name == 'push'
      working-directory: ./builddir
      run: |
        zip -r ${{ env.packagename }}.zip ${{ env.packagename }}

    - name: Upload artifacts
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.packagename }}.zip
        path: builddir/${{ env.packagename }}.zip
